CCS PCM C Compiler, Version 5.015, 5967               01-May-23 14:54

               Filename:   C:\Users\leho8\OneDrive\Máy tính\DOAN_1\code ccs\tttt.lst

               ROM used:   67 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           7 (2%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   01B
0003:  NOP
.................... #include <16F877A.h> 
.................... //////////// Standard Header file for the PIC16F877A device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877A 
....................  
.................... #list 
....................  
.................... #device ADC=8 *= 16 
.................... #fuses  HS 
.................... #use delay(clock=4M) 
0004:  MOVLW  22
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  BCF    0A.3
0019:  BCF    0A.4
001A:  GOTO   039 (RETURN)
.................... #define LAMP PIN_D1 
....................  
.................... void main() 
001B:  MOVF   03,W
001C:  ANDLW  1F
001D:  MOVWF  03
001E:  BSF    03.5
001F:  BSF    1F.0
0020:  BSF    1F.1
0021:  BSF    1F.2
0022:  BCF    1F.3
0023:  MOVLW  07
0024:  MOVWF  1C
0025:  BCF    03.7
.................... { 
.................... set_tris_b(0b00000001); 
0026:  MOVLW  01
0027:  MOVWF  06
.................... while(true) 
.................... { 
....................   if(input(pin_b0) == 1) 
0028:  BSF    06.0
0029:  BCF    03.5
002A:  BTFSS  06.0
002B:  GOTO   03C
....................   { 
....................   for(int i = 0; i<3; i++) 
002C:  CLRF   21
002D:  MOVF   21,W
002E:  SUBLW  02
002F:  BTFSS  03.0
0030:  GOTO   03B
....................   { 
....................    output_toggle(LAMP); 
0031:  BSF    03.5
0032:  BCF    08.1
0033:  MOVLW  02
0034:  BCF    03.5
0035:  XORWF  08,F
....................    delay_ms(200);  
0036:  MOVLW  C8
0037:  MOVWF  22
0038:  GOTO   004
0039:  INCF   21,F
003A:  GOTO   02D
....................   } 
....................   } 
003B:  GOTO   040
....................   else  
....................   { 
....................    output_low(LAMP); 
003C:  BSF    03.5
003D:  BCF    08.1
003E:  BCF    03.5
003F:  BCF    08.1
....................     
....................   } 
0040:  BSF    03.5
0041:  GOTO   028
.................... } 
.................... } 
0042:  SLEEP

Configuration Fuses:
   Word  1: 3F72   HS NOWDT PUT BROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
